"""add_test_range_table

Revision ID: 6bb1fe6300fe
Revises: bb99bb79a360
Create Date: 2025-08-04 11:17:57.517933

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "6bb1fe6300fe"
down_revision: Union[str, Sequence[str], None] = "bb99bb79a360"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "test_range",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "indicator",
            sa.String(length=50),
            nullable=False,
            comment="Name of the indicator (e.g., MACROECO, RSI, MACD, %K, ATR, CLOSE/PIVOT, VOL/OI)",
        ),
        sa.Column(
            "range_low",
            sa.DECIMAL(precision=15, scale=6),
            nullable=False,
            comment="Lower boundary of the range (inclusive)",
        ),
        sa.Column(
            "range_high",
            sa.DECIMAL(precision=15, scale=6),
            nullable=False,
            comment="Upper boundary of the range (inclusive)",
        ),
        sa.Column(
            "area",
            sa.String(length=10),
            nullable=False,
            comment="Color zone for this range (RED, ORANGE, GREEN)",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "indicator", "range_low", "range_high", name="uq_indicator_range"
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("test_range")
    # ### end Alembic commands ###
